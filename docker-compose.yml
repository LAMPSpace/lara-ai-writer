version: '3'
services:
    lara-backend:
        container_name: lara-backend
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8000}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
    pgsql:
        container_name: lara-pgsql
        image: 'postgres:14'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    pgadmin:
        container_name: lara-pgadmin
        image: 'dpage/pgadmin4:5.5'
        ports:
            - '${FORWARD_PGADMIN_PORT:-5050}:80'
        environment:
            PGADMIN_DEFAULT_EMAIL: 'admin@email.com'
            PGADMIN_DEFAULT_PASSWORD: 'admin'
        depends_on:
            - pgsql
        networks:
            - sail
        volumes:
            - 'pgadmin-data:/var/lib/pgadmin'
    lara-nextjs:
        container_name: lara-nextjs
        image: node:16
        working_dir: /var/www/html/lara-ai-writer-frontend
        command: yarn dev
        ports:
            - '${FRONTEND_PORT:-80}:3000'
        volumes:
            - '.:/var/www/html'
        depends_on:
            - lara-backend
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    pgadmin-data:
